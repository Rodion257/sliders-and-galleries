[{"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\index.js":"1","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\reportWebVitals.js":"2","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\App.js":"3","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\RoundSlider.js":"4","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\AdaptiveGallery.js":"5","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\SliderPage.js":"6","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\RoundSliderMobile.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1474,"mtime":1611915953905,"results":"11","hashOfConfig":"9"},{"size":4381,"mtime":1611947501863,"results":"12","hashOfConfig":"9"},{"size":3668,"mtime":1611825385447,"results":"13","hashOfConfig":"9"},{"size":8296,"mtime":1611910333951,"results":"14","hashOfConfig":"9"},{"size":1674,"mtime":1611955209493,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"x9lfrj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\index.js",[],["32","33"],"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\reportWebVitals.js",[],"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\App.js",[],"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\RoundSlider.js",[],"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\AdaptiveGallery.js",[],"C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\SliderPage.js",["34","35","36","37","38","39","40","41","42","43"],"import React from 'react';\r\nimport './SliderPage.css';\r\nimport titleImage from '../images/task3/title.png';\r\nimport topImage1 from '../images/task3/top-row/top1.jpg';\r\nimport topImage2 from '../images/task3/top-row/top2.jpg';\r\nimport topImage3 from '../images/task3/top-row/top3.png';\r\nimport middleImage1 from '../images/task3/middle-row/middle1.jpg';\r\nimport middleImage2 from '../images/task3/middle-row/middle2.jpg';\r\nimport middleImage3 from '../images/task3/middle-row/middle3.jpg';\r\nimport middleImage4 from '../images/task3/middle-row/middle4.jpg';\r\nimport middleImage5 from '../images/task3/middle-row/middle5.jpg';\r\nimport middleImage6 from '../images/task3/middle-row/middle6.jpg';\r\nimport middleImage7 from '../images/task3/middle-row/middle7.jpg';\r\nimport middleImage8 from '../images/task3/middle-row/middle8.jpg';\r\nimport bottomImage1 from '../images/task3/bottom-row/bottom1.png';\r\nimport bottomImage2 from '../images/task3/bottom-row/bottom2.png';\r\nimport bottomImage3 from '../images/task3/bottom-row/bottom3.png';\r\nimport bottomImage4 from '../images/task3/bottom-row/bottom4.png';\r\nimport bottomImage5 from '../images/task3/bottom-row/bottom5.png';\r\nimport bottomImage6 from '../images/task3/bottom-row/bottom6.png';\r\n\r\n\r\nfunction SliderPage() {\r\n\r\n  const [scrollTop, setScrollTop] = React.useState(0);\r\n  const [scrollMiddle, setScrollMiddle] = React.useState(0);\r\n  const [scrollBottom, setScrollBottom] = React.useState(0);\r\n  const rowTopRef = React.useRef();\r\n  const rowMiddleRef = React.useRef();\r\n  const rowBottomRef = React.useRef();\r\n\r\n  let topRowRatio;\r\n  let topRowStartPosition;\r\n  let topRowEndPosition;\r\n\r\n  let middleRowRatio;\r\n  let middleRowStartPosition;\r\n  let middleRowEndPosition;\r\n\r\n  let bottomRowRatio;\r\n  let bottomRowStartPosition;\r\n  let bottomRowEndPosition;\r\n\r\n\r\n  const windowHeight = document.documentElement.clientHeight;\r\n\r\n  React.useEffect(() => {\r\n    //Первый ряд\r\n    topRowRatio = rowTopRef.current.offsetWidth / document.documentElement.clientHeight;        //Соотношение ширины ряда с картинками к высоте экрана устройства\r\n    topRowStartPosition = rowTopRef.current.getBoundingClientRect().top + window.pageYOffset;   //Верхняя точка ряда по высоте\r\n    topRowEndPosition = rowTopRef.current.getBoundingClientRect().bottom + window.pageYOffset;  //Нижняя точка ряда по высоте\r\n    setScrollTop(-rowTopRef.current.offsetWidth);\r\n\r\n    //Второй ряд\r\n    middleRowRatio = rowMiddleRef.current.offsetWidth / document.documentElement.clientHeight;        //Соотношение ширины ряда с картинками к высоте экрана устройства\r\n    middleRowStartPosition = rowMiddleRef.current.getBoundingClientRect().top + window.pageYOffset;   //Верхняя точка ряда по высоте\r\n    middleRowEndPosition = rowMiddleRef.current.getBoundingClientRect().bottom + window.pageYOffset;  //Нижняя точка ряда по высоте\r\n    setScrollMiddle(-rowMiddleRef.current.offsetWidth);\r\n\r\n    //Третий ряд\r\n    bottomRowRatio = rowBottomRef.current.offsetWidth / document.documentElement.clientHeight;        //Соотношение ширины ряда с картинками к высоте экрана устройства\r\n    bottomRowStartPosition = rowBottomRef.current.getBoundingClientRect().top + window.pageYOffset;   //Верхняя точка ряда по высоте\r\n    bottomRowEndPosition = rowBottomRef.current.getBoundingClientRect().bottom + window.pageYOffset;  //Нижняя точка ряда по высоте\r\n    setScrollBottom(-rowBottomRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    function handleScroll() {\r\n      const topScrollPosition = window.pageYOffset;                   //Верхняя точка экрана устройства при скролле\r\n      const bottomScrollPosition = windowHeight + topScrollPosition;  //Нижняя точка экрана устройства при скролле\r\n      //Если первый ряд находится в поле видимости\r\n      if (bottomScrollPosition >= topRowStartPosition && topScrollPosition <= topRowEndPosition) {\r\n        setScrollTop((topScrollPosition - topRowStartPosition) * topRowRatio)\r\n      }\r\n      //Если второй ряд находится в поле видимости\r\n      if (bottomScrollPosition >= middleRowStartPosition && topScrollPosition <= middleRowEndPosition) {\r\n        setScrollMiddle((topScrollPosition - middleRowStartPosition) * middleRowRatio)\r\n      }\r\n      //Если третий ряд находится в поле видимости\r\n      if (bottomScrollPosition >= bottomRowStartPosition && topScrollPosition <= bottomRowEndPosition) {\r\n        setScrollBottom((topScrollPosition - bottomRowStartPosition) * bottomRowRatio)\r\n      }\r\n    }\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slider-page\">\r\n      <img className=\"slider-page__title-image\" src={titleImage} alt=\"Котик\" />\r\n\r\n      <div className=\"slider-row\">\r\n        <p className=\"slider-row__count\">01</p>\r\n        <h2 className=\"slider-row__title\">Brand</h2>\r\n        <div className=\"slider-row__images\" style={{ left: `${scrollTop}px` }} ref={rowTopRef}>\r\n          <img className=\"slider-row__image slider-row__image_position_top\" src={topImage1} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_top\" src={topImage2} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_top\" src={topImage3} alt=\"brand\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"slider-row\">\r\n        <p className=\"slider-row__count slider-row__count_position_left\">02</p>\r\n        <h2 className=\"slider-row__title slider-row__title_position_left\">Content production</h2>\r\n        <div className=\"slider-row__images slider-row__images_direction_left\" style={{ right: `${scrollMiddle}px` }} ref={rowMiddleRef}>\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage1} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage2} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage3} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage4} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage5} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage6} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage7} alt=\"content production\" />\r\n          <img className=\"slider-row__image slider-row__image_position_middle\" src={middleImage8} alt=\"content production\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"slider-row\">\r\n        <p className=\"slider-row__count\">03</p>\r\n        <h2 className=\"slider-row__title\">Digital</h2>\r\n        <div className=\"slider-row__images\" style={{ left: `${scrollBottom}px` }} ref={rowBottomRef}>\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage1} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage2} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage3} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage4} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage5} alt=\"brand\" />\r\n          <img className=\"slider-row__image slider-row__image_position_bottom\" src={bottomImage6} alt=\"brand\" />\r\n        </div>\r\n      </div>\r\n      \r\n    </div >\r\n  );\r\n}\r\n\r\nexport default SliderPage;\r\n","C:\\Users\\Rodion\\dev\\sliders-and-galleries\\src\\components\\RoundSliderMobile.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":49,"column":19,"nodeType":"50","endLine":49,"endColumn":88},{"ruleId":"48","severity":1,"message":"51","line":50,"column":27,"nodeType":"50","endLine":50,"endColumn":93},{"ruleId":"48","severity":1,"message":"52","line":51,"column":25,"nodeType":"50","endLine":51,"endColumn":94},{"ruleId":"48","severity":1,"message":"53","line":55,"column":22,"nodeType":"50","endLine":55,"endColumn":94},{"ruleId":"48","severity":1,"message":"54","line":56,"column":30,"nodeType":"50","endLine":56,"endColumn":99},{"ruleId":"48","severity":1,"message":"55","line":57,"column":28,"nodeType":"50","endLine":57,"endColumn":100},{"ruleId":"48","severity":1,"message":"56","line":61,"column":22,"nodeType":"50","endLine":61,"endColumn":94},{"ruleId":"48","severity":1,"message":"57","line":62,"column":30,"nodeType":"50","endLine":62,"endColumn":99},{"ruleId":"48","severity":1,"message":"58","line":63,"column":28,"nodeType":"50","endLine":63,"endColumn":100},{"ruleId":"48","severity":1,"message":"59","line":88,"column":6,"nodeType":"60","endLine":88,"endColumn":8,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","Assignments to the 'topRowRatio' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","BinaryExpression","Assignments to the 'topRowStartPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'topRowEndPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'middleRowRatio' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'middleRowStartPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'middleRowEndPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'bottomRowRatio' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'bottomRowStartPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'bottomRowEndPosition' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","React Hook React.useEffect has missing dependencies: 'bottomRowEndPosition', 'bottomRowRatio', 'bottomRowStartPosition', 'middleRowEndPosition', 'middleRowRatio', 'middleRowStartPosition', 'topRowEndPosition', 'topRowRatio', 'topRowStartPosition', and 'windowHeight'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [bottomRowEndPosition, bottomRowRatio, bottomRowStartPosition, middleRowEndPosition, middleRowRatio, middleRowStartPosition, topRowEndPosition, topRowRatio, topRowStartPosition, windowHeight]",{"range":"67","text":"68"},[4625,4627],"[bottomRowEndPosition, bottomRowRatio, bottomRowStartPosition, middleRowEndPosition, middleRowRatio, middleRowStartPosition, topRowEndPosition, topRowRatio, topRowStartPosition, windowHeight]"]